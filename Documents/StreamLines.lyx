#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Drawing streamlines of H(div) conforming solutions
\end_layout

\begin_layout Author
Philippe Devloo
\end_layout

\begin_layout Section
Streamlines
\end_layout

\begin_layout Standard
Streamlines are uniquely defined for H(div) conforming solutions.
 The continuity of the normal component of the flux and the fact that the
 solutions satisfy 
\begin_inset Formula $div(\vec{q})\equiv0$
\end_inset

 guarantees the existence of unique streamlines.
\end_layout

\begin_layout Standard
Moreover, the considering the approximation space is constructed using the
 Piola transformation allows us to compute the streamlines in the master
 element space using the vector shape functions in the master element.
\end_layout

\begin_layout Standard
Streamlines can be computed by solving the ordinary system of equations
\begin_inset Formula 
\[
\dot{x}=\vec{q}(x)
\]

\end_inset

or in the master element space
\begin_inset Formula 
\[
\dot{\xi}=\hat{\vec{q}}(\xi)
\]

\end_inset


\end_layout

\begin_layout Section
Streamlines and DFN
\end_layout

\begin_layout Standard
A problem occurs if the computational domain contains discrete fractures
 that are modeled with lower dimensional elements.
 How can one compute the exit position of a particle that entered the fracture
 at a given position in an upper or lower face?
\end_layout

\begin_layout Standard
The solution in this case can be found by reconstructing a dimensional flux
 compatible with the incoming fluxes in the lower dimensional fracture element.
 Such a flux can be constructed by idealizing a volume element in which
 the boundary fluxes are specified and for which internal fluxes are computed
 such that the resulting flux satisfies the divergence condition.
 This reconstruction is not necessarily unique but allows us to trace an
 incoming particle.
\begin_inset Formula 
\begin{align*}
\int_{\Omega_{e}}\tau\cdot(K^{-1}\sigma_{i})-div(\tau)p & =-\int_{\Omega_{e}}\tau\cdot(K^{-1}\sigma_{b})\\
-\int_{\Omega_{e}}\varphi_{p}(div(\sigma_{i})+g) & =\int\varphi_{p}div(\sigma_{b})\\
\int_{\Omega_{e}}\varphi_{g}p & =\int_{\Omega_{e}}\varphi_{g}\bar{p}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Using the fluxes computed by the above reconstruction, streamlines can be
 computed inside the fracture.
 Eventually, a virtual mesh can be created to visualize the streamlines
 within the fractures (by increasing their width)
\end_layout

\begin_layout Standard
An entry point with the fracture is necessarily a face.
 Then if the particle tracer algorithm computes that the point will exit
 through an extruded face, the that particle will enter the neighbouring
 fracture element at the position where the particle exited the neighbouring
 element.
\end_layout

\end_body
\end_document
